strategy:
  matrix:
    windows-stable:
      imageName: 'vs2017-win2016'
      rustup_toolchain: stable
    linux-stable:
      imageName: 'ubuntu-16.04'
      rustup_toolchain: stable

pool:
  vmImage: $(imageName)

steps:
  # Install Rust
  - script: |
      curl https://sh.rustup.rs -sSf | sh -s -- -y --default-toolchain $RUSTUP_TOOLCHAIN
      echo "##vso[task.setvariable variable=PATH;]$PATH:$HOME/.cargo/bin"
    displayName: Install rust
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: |
      curl -sSf -o rustup-init.exe https://win.rustup.rs
      rustup-init.exe -y --default-toolchain %RUSTUP_TOOLCHAIN%
      echo "##vso[task.setvariable variable=PATH;]%PATH%;%USERPROFILE%\.cargo\bin"
    displayName: Windows install rust
    condition: eq( variables['Agent.OS'], 'Windows_NT' )

  # Set env vars
  - script: |
      echo "##vso[task.setvariable variable=SOURCEMOD;]deps/sourcemod"
      echo "##vso[task.setvariable variable=MMSOURCE;]deps/mmsource"
      echo "##vso[task.setvariable variable=HL2SDKCSGO;]deps/hl2sdk-csgo"

  # Build
  - script: cargo build --target i686-unknown-linux-gnu --release
    displayName: Linux Cargo build
    condition: ne( variables['Agent.OS'], 'Windows_NT' )
  - script: cargo build --target i686-pc-windows-msvc --release
    displayName: Windows Cargo build
    condition: eq( variables['Agent.OS'], 'Windows_NT' )
